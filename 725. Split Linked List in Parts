/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    vector<ListNode*> splitListToParts(ListNode* head, int k) {

        vector<ListNode*> ans(k, nullptr);

        int nodes = 0;
        ListNode* temp = head;

        while(temp) {
            nodes++;
            temp = temp->next;
        }

        int rem = nodes % k;
        int fixed = nodes / k;
        temp = head;

        for(int i=0; temp and i < k; i++, rem--) {
            ans[i] = temp;
            ListNode* prev = NULL;
            for(int j=0; j<(fixed+(rem>0)); j++) {
                prev = temp;
                temp = temp->next;
            }
            prev->next = NULL;
        }
        
        return ans;

    }
};
