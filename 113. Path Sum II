/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {

    void solve(vector<vector<int>> &ans, TreeNode* root, vector<int> temp, int target) {

        if(root == NULL) return;

        if(root->left == NULL && root->right == NULL) {
            if(root->val == target) {
                temp.push_back(root->val);
                ans.push_back(temp);
            }
            return;
        }

        temp.push_back(root->val);
        target -= root->val;

        solve(ans, root->left, temp, target);
        solve(ans, root->right, temp, target);

    }

public:
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {

        vector<vector<int>> ans;
        vector<int> temp;

        solve(ans, root, temp, targetSum);

        return ans;
        
    }
};
