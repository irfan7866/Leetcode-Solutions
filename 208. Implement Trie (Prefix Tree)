class Trie {

    map<string, int> mp;
    map<string, int> pre;

public:
    Trie() {
        
    }
    
    void insert(string word) {

        mp[word]++;
        string temp = "";

        for(int i=0; i<word.size(); i++) {
            temp += word[i];
            pre[temp]++;
        }
        
    }
    
    bool search(string word) {

        if(mp[word]) return true;

        return false;
        
    }
    
    bool startsWith(string prefix) {

        if(pre[prefix]) return true;

        return false;
        
    }
};

/**
 * Your Trie object will be instantiated and called as such:
 * Trie* obj = new Trie();
 * obj->insert(word);
 * bool param_2 = obj->search(word);
 * bool param_3 = obj->startsWith(prefix);
 */
