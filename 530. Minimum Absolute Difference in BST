/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
 class Solution {
    void inorder(TreeNode* root, vector<int>& ans) {
        if(!root) return;
        inorder(root->left, ans);
        ans.push_back(root->val);
        inorder(root->right, ans);
    }
public:
    int getMinimumDifference(TreeNode* root) {

        vector<int> temp;

        inorder(root, temp);

        int ans = temp[1]-temp[0];

        for(int i=2; i<temp.size(); i++)
            if(temp[i]-temp[i-1] < ans)
                ans = temp[i]-temp[i-1];

        return ans;
        
    }
};
