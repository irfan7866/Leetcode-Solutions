/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {

    ListNode* reverse(ListNode* list) {
        ListNode* pre = NULL;
        ListNode* temp = list;
        ListNode* nex = NULL;
        while(temp) {
            nex = temp->next;
            temp->next = pre;
            pre = temp;
            temp = nex;
        }
        list = pre;
        return list;
    }

public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {

        ListNode* ans = new ListNode();
        ListNode* temp = ans;

        ListNode* list1 = reverse(l1);
        ListNode* list2 = reverse(l2);

        int carry = 0;

        while(list1 || list2 || carry) {
            int first = 0, second = 0;
            if(list1) {
                first = list1->val;
                list1 = list1->next;
            }
            if(list2) {
                second = list2->val;
                list2 = list2->next;
            }
            ListNode* t = new ListNode((first + second + carry) % 10);
            carry = (first + second + carry) / 10;
            temp->next = t;
            temp = temp->next;
        }

        ans = reverse(ans->next);
        return ans;
        
    }
};
