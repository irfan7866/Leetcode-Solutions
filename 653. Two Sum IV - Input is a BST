/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {

    void solve(TreeNode* root, vector<int>& temp) {
        if(root == NULL) return;
        solve(root->left, temp);
        temp.push_back(root->val);
        solve(root->right, temp);
    }

public:
    bool findTarget(TreeNode* root, int k) {

        vector<int> temp;
        solve(root, temp);

        int s = 0;
        int e = temp.size()-1;

        while(s < e) {
            if(temp[s] + temp[e] == k) return true;
            else if(temp[s] + temp[e] > k) e--;
            else s++;
        }

        return false;
        
    }
};
