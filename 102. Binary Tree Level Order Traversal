/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {

        vector<vector<int>> ans;
        vector<int> temp;

        if(root == NULL) return ans;

        queue<TreeNode*> q;

        q.push(root);
        q.push(NULL);

        while(!q.empty()) {
            TreeNode* t = q.front();
            q.pop();
            if(t != NULL) {
                temp.push_back(t->val);
                if(t->left != NULL) q.push(t->left);
                if(t->right != NULL) q.push(t->right);
            }
            else {
                temp.push_back(-1001);
                if(q.front() == NULL || q.empty()) break;
                q.push(NULL);
            }
        }

        int cnt = 0;
        for(int i=0; i<temp.size(); i++) {
            if(temp[i] == -1001) cnt++;
        }

        int j = 0;
        for(int i=0; i<cnt; i++) {
            vector<int> a;
            while(j < temp.size()) {
                if(temp[j] == -1001) {
                    j++;
                    break;
                }
                a.push_back(temp[j]);
                j++;
            }
            ans.push_back(a);
        }

        return ans;
        
    }
};
