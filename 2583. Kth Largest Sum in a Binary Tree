/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    long long kthLargestLevelSum(TreeNode* root, int k) {
        
        map<long long, int, greater<long long>> mp;

        queue<TreeNode*> q;
        q.push(root);

        long long sum = 0;

        while(!q.empty()) {
            sum = 0;
            int j = q.size();
            for(int i=0; i<j; i++) {
                TreeNode* temp = q.front();
                q.pop();
                sum += temp->val;
                if(temp->left) q.push(temp->left);
                if(temp->right) q.push(temp->right);
            }
            mp[sum]++;
        }

        int cnt = 0;

        for(auto it : mp) {
            cnt += it.second;
            if(cnt >= k)
                return it.first;
        }

        return -1;
        
    }
};
