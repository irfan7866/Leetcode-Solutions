/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxLevelSum(TreeNode* root) {

        queue<TreeNode*> q;

        q.push(root);
        q.push(NULL);

        int cnt = 1;
        int ans = 1;
        int maxi = INT_MIN;
        int sum = 0;

        while(!q.empty()) {
            sum = 0;
            while(q.front() != NULL) {
                TreeNode* temp = q.front();
                q.pop();
                sum += temp->val;
                if(temp->left) q.push(temp->left);
                if(temp->right) q.push(temp->right);
            }
            if(maxi < sum) {
                maxi = sum;
                ans = cnt;
            }
            cnt++;
            q.pop();
            if(q.empty()) break;
            q.push(NULL);
        }

        return ans;
        
    }
};
